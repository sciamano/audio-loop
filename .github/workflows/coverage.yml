name: Coverage

on: [push, pull_request]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  app:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        qt-version: ['6.6.1']
        build-type: [Debug]
    steps:
    - uses: actions/checkout@v3
    - name: install aqt
      run: |
        pip3 install aqtinstall
    - name: install Qt
      run: |
        O_DIR=$HOME/Qt
        echo "O_DIR=$O_DIR" >>$GITHUB_ENV
        pwd
        aqt list-qt linux desktop
        aqt list-qt linux desktop --arch latest
        aqt install-qt linux desktop ${{ matrix.qt-version }} -m qtmultimedia -O $O_DIR
    - name: Qt dir
      run: |
        Qt6_QMAKE=`find $O_DIR -name "qmake6*"`
        echo $Qt6_QMAKE
        Qt6_BINDIR=`dirname $Qt6_QMAKE`
        echo $Qt6_BINDIR
        Qt6_DIR=`dirname $Qt6_BINDIR`
        echo $Qt6_DIR
        QT_PLUGIN_PATH=$Qt6_DIR/plugins
        QML2_IMPORT_PATH=$Qt6_DIR/qml
        echo "Qt6_DIR=$Qt6_DIR" >>$GITHUB_ENV
        echo "Qt6_BINDIR=$Qt6_BINDIR" >>$GITHUB_ENV
        echo "QT_PLUGIN_PATH=$QT_PLUGIN_PATH" >>$GITHUB_ENV
        echo "QML2_IMPORT_PATH=$QML2_IMPORT_PATH" >>$GITHUB_ENV
    - name: build deps
      run: |
        pwd
        cat /etc/os-release
        cat /etc/apt/sources.list
        ls -la /etc/apt/sources.list.d/
        cat /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get -qq update
        sudo apt-get install --assume-yes gcovr
        sudo apt-get install --assume-yes libgl1-mesa-dev
        sudo apt-get install --assume-yes libpulse0
        sudo apt-get install --assume-yes libqt5gui5
        sudo apt-get install --assume-yes libxcb-cursor0
        sudo apt-get install --assume-yes pulseaudio
        sudo apt-get install --assume-yes xvfb
    - name: configure
      run: |
        BUILD_DIR=$HOME/build
        echo "BUILD_DIR=$BUILD_DIR" >>$GITHUB_ENV
        pwd
        cmake -DCMAKE_PREFIX_PATH=$Qt6_DIR -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -B $BUILD_DIR -DUSE_DEPLOY=ON
    - name: build
      run: |
        pwd
        cmake --build $BUILD_DIR --target all
        ls -la $BUILD_DIR
    - name: test
      run: |
        pwd
        systemctl --user start pulseaudio
        xvfb-run ctest --output-on-failure --test-dir $BUILD_DIR
    - name: coverage
      run: |
        pwd
        cmake --build $BUILD_DIR --target coverage
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: ${{ env.BUILD_DIR }}/coverage.json
    - name: Codecov
      uses: codecov/codecov-action@v3
      with:
        parallel: true
        flag-name: cpp-test
        files: ${{ env.BUILD_DIR }}/coverage.xml

  python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build deps
      run: |
        pwd
        sudo apt-get -qq update
        sudo apt-get install --assume-yes python3-coverage
    - name: coverage
      run: |
        pwd
        export PYTHONPATH=./python/:$PYTHONPATH
        python3-coverage run --source . -m unittest python/tests.py
        python3-coverage xml
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        parallel: true
        flag-name: python-test
        file: coverage.xml
    - name: Codecov
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml

  finish:
    needs: [app, python]
    runs-on: ubuntu-latest
    steps:
    - name: Close parallel build
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
        carryforward: "cpp-test,python-test"
