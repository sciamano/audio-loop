name: CI

on:
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
        qt-version: ['6.3.0']
        build-type: [Debug, Release]
    steps:
    - uses: actions/checkout@v3
    - uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        modules: 'qtmultimedia'
        aqtversion: '==2.1.0'
    - uses: seanmiddleditch/gha-setup-ninja@v3
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.platform }}
    - name: configure
      run: |
        INSTALL_PATH=${{ matrix.build-type }}-${GITHUB_SHA:0:8}
        echo "INSTALL_PATH=$INSTALL_PATH" >>$GITHUB_ENV
        cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_PATH -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -GNinja -B build
    - name: build
      run: cmake --build build --target install
    - name: post-check
      run: |
        ls -laR $INSTALL_PATH
    - name: upload artefacts
      uses: actions/upload-artifact@v3
      with:
        name: '${{ env.INSTALL_PATH }}'
        path: ${{ env.INSTALL_PATH }}/*

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        qt-version: ['6.3.0']
        build-type: [Debug, Release]
    steps:
    - uses: actions/checkout@v3
    - uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt-version }}
        modules: 'qtmultimedia'
        aqtversion: '==2.1.0'
    - name: configure
      run: |
        cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -B build
    - name: build
      run: |
        INSTALL_PATH=linux-${{ matrix.build-type }}-${GITHUB_SHA:0:8}
        echo $INSTALL_PATH
        echo "INSTALL_PATH=$INSTALL_PATH" >>$GITHUB_ENV
        cd build
        make DESTDIR=$INSTALL_PATH install
    - name: linuxdeploy
      run: |
        pwd
        export PATH=`pwd`:$PATH
        echo $PATH
        wget -nv https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget -nv https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy*.AppImage
        `which qmake6`
        ls -l $Qt6_DIR/bin
        ln -s `which qmake6` $HOME/.local/bin/qmake
        linuxdeploy-x86_64.AppImage --appdir $INSTALL_PATH --plugin qt --output appimage
    - name: post-check
      run: |
        ls -la
        ls -laR $INSTALL_PATH
    # - name: upload artefacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: '${{ env.INSTALL_PATH }}'
    #     path: ${{ env.INSTALL_PATH }}/*
