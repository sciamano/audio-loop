name: CI

on:
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        # platform: [x64]
        qt-version: ['6.3.0']
        build-type: [Debug, Release]
    steps:
    - uses: actions/checkout@v3
    - name: install Qt
      run: |
        #wget https://github.com/miurahr/aqtinstall/releases/download/v2.1.0/aqt.exe
        O_DIR=$HOME/Qt
        pip install aqtinstall
        aqt install-tool windows desktop tools_mingw90 -O $O_DIR
        aqt install-tool windows desktop tools_cmake -O $O_DIR
        aqt install-tool windows desktop tools_ninja -O $O_DIR
        cd $O_DIR
        ls -la
        Qt6_DIR=$O_DIR/${{ matrix.qt-version }}/mingw_64
        echo "Qt6_DIR=$Qt6_DIR" >>$GITHUB_ENV
    - name: configure
      run: |
        INSTALL_PATH=${{ matrix.build-type }}-${GITHUB_SHA:0:8}
        echo "INSTALL_PATH=$INSTALL_PATH" >>$GITHUB_ENV
        cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_PATH -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -GNinja -B build
    - name: build
      run: cmake --build build --target install
    - name: post-check
      run: |
        ls -laR $INSTALL_PATH
    - name: upload artefacts
      uses: actions/upload-artifact@v3
      with:
        name: '${{ env.INSTALL_PATH }}'
        path: ${{ env.INSTALL_PATH }}/*

  # linux:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       qt-version: ['6.3.0']
  #       build-type: [Debug, Release]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: install deps
  #     run: |
  #       sudo apt-get -qq update
  #       sudo apt-get --assume-yes install qtbase5-dev qtmultimedia5-dev
  #   - name: install Qt
  #     run: |
  #       pip install aqtinstall
  #       Qt6_DIR=$HOME/Qt
  #       echo "Qt6_DIR=$Qt6_DIR" >>$GITHUB_ENV
  #       aqt install-qt linux desktop 6.3.0 gcc_64 -m qtmultimedia -O $Qt6_DIR
  #   - name: configure
  #     run: |
  #       cmake -DCMAKE_PREFIX_PATH=$Qt6_DIR/${{ matrix.qt-version }}/gcc_64 -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -B build
  #   - name: build
  #     run: |
  #       INSTALL_PATH=linux-${{ matrix.build-type }}-${GITHUB_SHA:0:8}
  #       echo $INSTALL_PATH
  #       echo "INSTALL_PATH=$INSTALL_PATH" >>$GITHUB_ENV
  #       cd build
  #       make DESTDIR=$INSTALL_PATH install
  #   - name: linuxdeploy
  #     run: |
  #       pwd
  #       export PATH=`pwd`:$PATH
  #       echo $PATH
  #       wget -nv https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
  #       wget -nv https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
  #       chmod +x linuxdeploy*.AppImage
  #       echo $HOME
  #       export PATH=$Qt6_DIR/${{ matrix.qt-version }}/gcc_64/bin:$PATH
  #       mkdir -p $HOME/bin/
  #       ln -s `which qmake6` $HOME/bin/qmake
  #       export PATH=$HOME/bin/:$PATH
  #       export LD_LIBRARY_PATH=$Qt6_DIR/${{ matrix.qt-version }}/gcc_64/lib:$LD_LIBRARY_PATH
  #       linuxdeploy-x86_64.AppImage --appdir $INSTALL_PATH --plugin qt --output appimage
  #   - name: post-check
  #     run: |
  #       ls -la
  #       ls -laR $INSTALL_PATH
  #   # - name: upload artefacts
  #   #   uses: actions/upload-artifact@v3
  #   #   with:
  #   #     name: '${{ env.INSTALL_PATH }}'
  #   #     path: ${{ env.INSTALL_PATH }}/*
